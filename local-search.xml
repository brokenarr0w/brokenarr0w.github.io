<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>生日出行计划</title>
    <link href="/2024/05/02/%E7%94%9F%E6%97%A5%E5%87%BA%E8%A1%8C%E8%AE%A1%E5%88%92/"/>
    <url>/2024/05/02/%E7%94%9F%E6%97%A5%E5%87%BA%E8%A1%8C%E8%AE%A1%E5%88%92/</url>
    
    <content type="html"><![CDATA[<h1 id="出行计划"><a href="#出行计划" class="headerlink" title="出行计划"></a>出行计划</h1><p>这个计划是为了6月11号生日所准备的。计划从9号出发西安长安区，11号回来共2天半。计划花销和旅游之后的图片会附在最后。</p><h2 id="酒店"><a href="#酒店" class="headerlink" title="酒店"></a>酒店</h2><p>暂定<strong>TOWO上品酒店</strong>（截止5.2时价113-135 共计226-270）</p><h2 id="必去"><a href="#必去" class="headerlink" title="必去"></a>必去</h2><h3 id="终南山"><a href="#终南山" class="headerlink" title="终南山"></a>终南山</h3><p> 学生票17共34 交通费32</p><h2 id="景点备选"><a href="#景点备选" class="headerlink" title="景点备选"></a>景点备选</h2><h3 id="陕西历史博物馆-免费"><a href="#陕西历史博物馆-免费" class="headerlink" title="陕西历史博物馆 免费"></a>陕西历史博物馆 免费</h3><h3 id="曲江池遗址公园-免费"><a href="#曲江池遗址公园-免费" class="headerlink" title="曲江池遗址公园 免费"></a>曲江池遗址公园 免费</h3><blockquote><p>曲江池遗址公园和寒窑遗址公园离得很近</p></blockquote><h3 id="寒窑遗址公园-免费"><a href="#寒窑遗址公园-免费" class="headerlink" title="寒窑遗址公园 免费"></a>寒窑遗址公园 免费</h3><h3 id="陕西自然博物馆-30"><a href="#陕西自然博物馆-30" class="headerlink" title="陕西自然博物馆 30"></a>陕西自然博物馆 30</h3><h3 id="芙蓉园-120"><a href="#芙蓉园-120" class="headerlink" title="芙蓉园 120"></a>芙蓉园 120</h3><h2 id="广场备选（逛街逛街）"><a href="#广场备选（逛街逛街）" class="headerlink" title="广场备选（逛街逛街）"></a>广场备选（逛街逛街）</h2><h3 id="W-Five-Park-万众国际商业中心"><a href="#W-Five-Park-万众国际商业中心" class="headerlink" title="W Five Park 万众国际商业中心"></a>W Five Park 万众国际商业中心</h3><h3 id="芙蓉新天地"><a href="#芙蓉新天地" class="headerlink" title="芙蓉新天地"></a>芙蓉新天地</h3><h2 id="美食备选"><a href="#美食备选" class="headerlink" title="美食备选"></a>美食备选</h2><h3 id="W-Five-Park-万众国际商业中心旁边"><a href="#W-Five-Park-万众国际商业中心旁边" class="headerlink" title="W Five Park 万众国际商业中心旁边"></a>W Five Park 万众国际商业中心旁边</h3><h4 id="延安沾沾-人均30"><a href="#延安沾沾-人均30" class="headerlink" title="延安沾沾 人均30"></a>延安沾沾 人均30</h4><h4 id="醉火火铁锅炖-人均50"><a href="#醉火火铁锅炖-人均50" class="headerlink" title="醉火火铁锅炖 人均50"></a>醉火火铁锅炖 人均50</h4><h4 id="太元彭家正汤-人均20"><a href="#太元彭家正汤-人均20" class="headerlink" title="太元彭家正汤 人均20"></a>太元彭家正汤 人均20</h4><h3 id="酒店旁边"><a href="#酒店旁边" class="headerlink" title="酒店旁边"></a>酒店旁边</h3><h4 id="陈阿鑫打边炉-人均50"><a href="#陈阿鑫打边炉-人均50" class="headerlink" title="陈阿鑫打边炉 人均50"></a>陈阿鑫打边炉 人均50</h4><h4 id="随性吃面"><a href="#随性吃面" class="headerlink" title="随性吃面"></a>随性吃面</h4><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>初步计划是第一天在酒店住下后往北走逛逛公园和博物馆，第二天往南去终南山爬山。<br>预计花费：<br>来回车票28-80<br>门票：30+120<br>交通费：40<br>吃：300<br>酒店：200-300<br>共：700左右</p><h1 id="旅游日记"><a href="#旅游日记" class="headerlink" title="旅游日记"></a>旅游日记</h1><p>待占位……</p>]]></content>
    
    
    <categories>
      
      <category>日记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>旅游</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C#学习</title>
    <link href="/2024/04/17/C-%E5%AD%A6%E4%B9%A0/"/>
    <url>/2024/04/17/C-%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>之前学习java是无奈之举，现在既然已经考了研，在上岸以后我想追寻我最初的梦想：做游戏。而国内基本就是虚幻引擎和Unity二分天下。虚幻引擎因为用到了C++，我并不是很熟悉，所以就先从Unity开始吧。学习Unity肯定要先学习C#的语法，于是就有了这篇博文。（参考资料是微软官网的文档<a href="https://learn.microsoft.com/zh-cn/dotnet/csharp/?WT.mc_id=dotnet-35129-website">C#文档</a>，缓慢学习中）</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C sharp</tag>
      
      <tag>Unity</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>算法</title>
    <link href="/2024/04/14/%E7%AE%97%E6%B3%95/"/>
    <url>/2024/04/14/%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="考研算法练习"><a href="#考研算法练习" class="headerlink" title="考研算法练习"></a>考研算法练习</h1><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>之前因为蓝桥杯的缘故，疯狂的做过一些算法题。但是考完了大部分就忘了。现在因考研考408需要再熟悉一下各种的数据结构和算法。于是就有了这篇文章。</p><h2 id="链表、栈和队列"><a href="#链表、栈和队列" class="headerlink" title="链表、栈和队列"></a>链表、栈和队列</h2><h3 id="链表的增删改查"><a href="#链表的增删改查" class="headerlink" title="链表的增删改查"></a>链表的增删改查</h3><pre><code class="hljs">今天完成了单链表的简单增删改查操作。以下是代码及运行结果。</code></pre><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 链表结构体（int可以换成别的数据类型）</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">struct</span> <span class="hljs-title class_">node</span><br>&#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 数据域</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">int</span> data;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 指针域</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">struct</span> <span class="hljs-title class_">node</span> *next;<br><br>&#125; *linklist, Lnode;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 初始化带头指针的链表</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">initLinklist</span><span class="hljs-params">(linklist &amp;T)</span></span><br><span class="hljs-function"></span>&#123;<br>    T = (Lnode *)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in">sizeof</span>(Lnode));<br>    T-&gt;next = <span class="hljs-literal">NULL</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 初始化不带头指针的链表</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">initLinklistWithoutHead</span><span class="hljs-params">(linklist &amp;T)</span></span><br><span class="hljs-function"></span>&#123;<br>    T = <span class="hljs-literal">NULL</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 求表长</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">listLength</span><span class="hljs-params">(linklist &amp;T)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> len = <span class="hljs-number">0</span>;<br>    Lnode *p = T;<br>    <span class="hljs-keyword">while</span> (p-&gt;next != <span class="hljs-literal">NULL</span>)<br>    &#123;<br>        len++;<br>        p = p-&gt;next;<br>    &#125;<br>    <span class="hljs-keyword">return</span> len;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 链表按值查找</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function">Lnode *<span class="hljs-title">findVal</span><span class="hljs-params">(linklist &amp;T, <span class="hljs-type">int</span> val)</span></span><br><span class="hljs-function"></span>&#123;<br>    Lnode *p = T-&gt;next;<br>    <span class="hljs-keyword">while</span> (p != <span class="hljs-literal">NULL</span> &amp;&amp; p-&gt;data != val)<br>    &#123;<br>        p = p-&gt;next;<br>    &#125;<br>    <span class="hljs-keyword">return</span> p;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 链表按位序查找(未查到返回-1)</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-function">Lnode *<span class="hljs-title">findPos</span><span class="hljs-params">(linklist &amp;T, <span class="hljs-type">int</span> pos)</span></span><br><span class="hljs-function"></span>&#123;<br>    Lnode *p = T;<br>    <span class="hljs-type">int</span> index = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span> (p-&gt;next != <span class="hljs-literal">NULL</span> &amp;&amp; index &lt; pos)<br>    &#123;<br>        p = p-&gt;next;<br>        index++;<br>    &#125;<br>    <span class="hljs-keyword">return</span> p;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 在第i个位置插入一个新的节点（从1开始）</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">insert</span><span class="hljs-params">(linklist &amp;T, <span class="hljs-type">int</span> data, <span class="hljs-type">int</span> index)</span></span><br><span class="hljs-function"></span>&#123;<br>    Lnode *p = T; <span class="hljs-comment">// 当前节点指针</span><br>    <span class="hljs-type">int</span> j = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span> (p != <span class="hljs-literal">NULL</span> &amp;&amp; j &lt; index - <span class="hljs-number">1</span>) <span class="hljs-comment">// 循环找到第i-1个节点</span><br>    &#123;<br>        p = p-&gt;next;<br>        j++;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (p == <span class="hljs-literal">NULL</span>)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>; <span class="hljs-comment">// index 不合法</span><br>    &#125;<br>    Lnode *s = (Lnode *)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in">sizeof</span>(Lnode));<br>    s-&gt;data = data;<br>    s-&gt;next = p-&gt;next;<br>    p-&gt;next = s;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 删除节点</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">deleteNode</span><span class="hljs-params">(linklist &amp;T, <span class="hljs-type">int</span> *data, <span class="hljs-type">int</span> i)</span></span><br><span class="hljs-function"></span>&#123;<br>    Lnode *p = T;<br>    <span class="hljs-type">int</span> j = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span> (p != <span class="hljs-literal">NULL</span> &amp;&amp; j &lt; i - <span class="hljs-number">1</span>)<br>    &#123; <span class="hljs-comment">// 找到第i-1个节点</span><br>        p = p-&gt;next;<br>        j++;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (p == <span class="hljs-literal">NULL</span> || p-&gt;next == <span class="hljs-literal">NULL</span>)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>    Lnode *q = p-&gt;next;<br>    *data = q-&gt;data;<br>    p-&gt;next = q-&gt;next;<br>    <span class="hljs-built_in">free</span>(q);<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 头插法建立链表(建立以后链表为逆序)</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function">linklist <span class="hljs-title">list_createByHead</span><span class="hljs-params">(linklist &amp;T)</span></span><br><span class="hljs-function"></span>&#123;<br>    Lnode *s;<br>    <span class="hljs-type">int</span> x;<br>    T = (Lnode *)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in">sizeof</span>(Lnode));<br>    T-&gt;next = <span class="hljs-literal">NULL</span>;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;你想要插入什么数据&quot;</span>);<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;x);<br>    <span class="hljs-keyword">while</span> (x != <span class="hljs-number">99</span>)<br>    &#123;<br>        s = (Lnode *)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in">sizeof</span>(Lnode));<br>        s-&gt;data = x;<br>        s-&gt;next = T-&gt;next;<br>        T-&gt;next = s;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;你想要插入什么数据&quot;</span>);<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;x);<br>    &#125;<br>    <span class="hljs-keyword">return</span> T;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 尾插法建立链表</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function">linklist <span class="hljs-title">list_createByTail</span><span class="hljs-params">(linklist &amp;L)</span></span><br><span class="hljs-function"></span>&#123;<br>    Lnode *s, *t;<br>    <span class="hljs-type">int</span> x;<br>    L = (Lnode *)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in">sizeof</span>(Lnode));<br>    L-&gt;next = <span class="hljs-literal">NULL</span>;<br>    t = L;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;你想要插入什么数据&quot;</span>);<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;x);<br>    <span class="hljs-keyword">while</span> (x != <span class="hljs-number">99</span>)<br>    &#123;<br>        s = (Lnode *)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in">sizeof</span>(Lnode));<br>        s-&gt;data = x;<br>        t-&gt;next = s;<br>        t = s;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;你想要插入什么数据&quot;</span>);<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;x);<br>    &#125;<br>    t-&gt;next = <span class="hljs-literal">NULL</span>;<br>    <span class="hljs-keyword">return</span> L;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 打印链表</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">printList</span><span class="hljs-params">(linklist &amp;T)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;链表当前状态：&quot;</span>);<br>    Lnode *p = T-&gt;next;<br>    <span class="hljs-keyword">while</span> (p != <span class="hljs-literal">NULL</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d -&gt; &quot;</span>, p-&gt;data);<br>        p = p-&gt;next;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;null\n&quot;</span>);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span> <span class="hljs-type">const</span> *argv[])</span></span><br><span class="hljs-function"></span>&#123;<br>    linklist list, head;<br>    <span class="hljs-built_in">list_createByTail</span>(list);<br>    <span class="hljs-built_in">list_createByHead</span>(head);<br>    <span class="hljs-built_in">printList</span>(head);<br>    <span class="hljs-type">int</span> x;<br>    <span class="hljs-built_in">printList</span>(list);<br>    <span class="hljs-built_in">deleteNode</span>(list, &amp;x, <span class="hljs-number">1</span>);<br>    <span class="hljs-built_in">printList</span>(list);<br>    <span class="hljs-built_in">insert</span>(list, <span class="hljs-number">25</span>, <span class="hljs-number">3</span>);<br>    <span class="hljs-built_in">printList</span>(list);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h4><p><img src="/img/%E5%8D%95%E9%93%BE%E8%A1%A8%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C.png" alt="单链表增删改查运行结果"></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
